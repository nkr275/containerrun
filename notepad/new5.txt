


	1. http2 enable on ingress
	2. how route the traffic from ingress to nginx deployment (it has to be as 443 port)
	3. ssl certificatin on ingress
	4. secure the nginx deploymenta 
	
	
	5. specific to me --------->   securing at ingress will define the problem +
	
	openssl req -x509 -newkey rsa:4096 -sha256 -days 3650  -keyout nginx.key -out nginx.crt -subj "/CN=k8spoc.smarthub.ai" -addext "IP:51.83.252.116"
  
	openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout privateKey.key -out certificate.crt     
  
  k8spoc.smarthub.ai
	
	kubectl create secret tls nginx-ingress-tls --key privateKey.key --cert certificate.crt  
	
	kubectl create secret tls ingress-tls --key nginx.key --cert nginx.crt
	
	/opt/bitnami/nginx/client_body_temp
	
	openssl req -new -nodes -x509 -days 365 -keyout nginx.key -out nginx.crt -config <path/to/req/file/from/above>
	
	
	docker run -d --name nginx \
  -v /home/kranti/nk275/nginx/nginx/conf/nginx.conf:/opt/bitnami/nginx/conf/nginx.conf \
  -v /home/kranti/nk275/nginx/nginx/certs/site.conf:/opt/bitnami/nginx/conf/conf.d/ \
  -v /home/kranti/nk275/nginx/nginx/certs/nginx.crt:/opt/bitnami/nginx/certs/nginx.crt \
  -v /home/kranti/nk275/nginx/nginx/certs/nginx.crt:/opt/bitnami/nginx/certs/nginx.key \
  -v /home/kranti/nk275/nginx/nginx/logs:/var/log/smarthub/iotc \
bitnami/nginx:latest bash 

	
	
	
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: http-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
{{- if eq .Values.envVariables.MULTI_HOST true }}
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: {{ .Values.envVariables.ingress.CERTIFICATE_NAME }}

{{- end }}
{{- if eq .Values.envVariables.MULTI_HOST false }}
    kubernetes.io/ingress.class: nginx
{{- end }}
spec:
 {{- if eq .Values.envVariables.MULTI_HOST true }}
#   tls:
#   - hosts:
#     - {{ .Values.envVariables.ingress.HOSTNAME }}
#     secretName: {{ .Values.envVariables.ingress.SECRETNAME }}
  rules:
    - host: {{ .Values.envVariables.ingress.HOSTNAME }}
      http:
        paths:
          - path: {{ .Values.envVariables.ingress.PATH }}
            backend:
              serviceName: {{ .Values.envVariables.ingress.SERVICENAME }}
              servicePort: {{ .Values.envVariables.ingress.SERVICEPORT }}
{{- end }}
{{- if eq .Values.envVariables.MULTI_HOST false }}
  
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: nc-nginx-service
          servicePort: 80
{{- end }}