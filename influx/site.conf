# Configure nginx to include $request_id in a custom logging format, trace, which is used for
# iotc-console-ui-access.log file

log_format trace '$remote_addr - $remote_user [$time_local]' '"$http_x_forwarded_for" [$request_id]'
                    ' "$request" ' '$status $body_bytes_sent "$http_referer" "$http_user_agent" ' ;


log_format trace=json '{"timestamp":"$time_iso8601", "$http_x_forwarded_for" [$request_id],
                        "client":"$remote_addr",' '"uri":"$uri","http-status":$status,'
                        '"upstream":"$upstream_addr"}';

# Conditional logging to exclude requests with HTTP status
# codes 2xx (Success) and 3xx (Redirection)
map $status $loggable {
    ~^[23] 0;
    default 1;
}

server {
    listen 8080;

    # Condition to check whether the request method is one of GET, PUT, POST, DELETE, PATCH, OPTIONS. If
    # that's not the case, nginx will throw error with 405 Status code
    if ($request_method !~ ^(GET|PUT|POST|DELETE|PATCH|OPTIONS)$ ) {
        return 405;
    }

    add_header X-Request-ID $request_id; # Pass request id back to client in response header
    add_header X-Frame-Options SAMEORIGIN; # In order to prevent clickjacking vulnerability
    # root /opt/vmware/iotc/iotc-console-ui;

    # TBD temporarly disable syslog integeration till we figure out how to do the same n k8s
    #error_log syslog:server=DOCKER_HOST:514,facility=local3;    
    #access_log syslog:server=DOCKER_HOST:514,facility=local3,severity=info trace if=$loggable;    
    #error_log /var/log/vmware/iotc/nginx-error.log warn;
    #access_log /var/log/vmware/iotc/iotc-console-ui-access.log trace;
    error_log /dev/stderr warn;
    access_log /dev/stdout trace;
    error_log /var/log/smarthub/iotc/nginx-error.log warn;
    access_log /var/log/smarthub/iotc/iotc-console-ui-access.log trace;

    # internal docker dns resolver
    resolver 127.0.0.11 valid=30s ipv6=off;

    # assign variables to container names
    set $notifications iotc-notifications.default.svc.cluster.local;
    set $iam iotc-iam.default.svc.cluster.local; 
    set $aggregator iotc-aggregator.default.svc.cluster.local;
    set $communicator iotc-communicator.default.svc.cluster.local;
    set $console iotc-console.default.svc.cluster.local;
    set $alert iotc-alert.default.svc.cluster.local;
    set $metricquery iotc-metricquery.default.svc.cluster.local;
    set $metricingest iotc-metricingest.default.svc.cluster.local;
    set $lcm iotc-lcm.default.svc.cluster.local;
    set $devicemgmt iotc-devicemgmt.default.svc.cluster.local;
    set $devicesec iotc-devicesec.default.svc.cluster.local;
    set $devicedisc iotc-devicedisc.default.svc.cluster.local;
    set $repo iotc-repo.default.svc.cluster.local;
    set $distribution iotc-distribution.default.svc.cluster.local;
    set $zcsconnector iotc-zcsconnector.default.svc.cluster.local;
    set $deviceagent iotc-deviceagent.default.svc.cluster.local;
#   adding grafana.conf variable 
#   set $rootTenantName $cookie_rootTenantName;

    location /  {
        include /opt/bitnami/nginx/conf/mime.types;       # include /etc/nginx/mime.types;
        index ui/index.html;
    }

    location /ui/ {
        include /opt/bitnami/nginx/conf/mime.types;       # include /etc/nginx/mime.types;
        index index.html;
    }

    location /openapi/ {
        root /opt/vmware/iotc/iotc-openapi;
        rewrite ^/openapi/(.*)$ /$1 break;
        include /opt/bitnami/nginx/conf/mime.types;       # include /etc/nginx/mime.types;
    }

    location /api/iotc-agent/ {
        root /opt/vmware/iotc;
        rewrite ^/api/(.*)$ /$1 break;
        add_header Content-Disposition "attachment";
    }

    location /api/iotc-cli/ {
        root /opt/vmware/iotc;
        rewrite ^/api/(.*)$ /$1 break;
        add_header Content-Disposition "attachment";
    }

    location /api/bios-mgmt/ {
        root /opt/vmware/iotc;
        rewrite ^/api/(.*)$ /$1 break;
        add_header Content-Disposition "attachment";
    }

    location /api/liota/ {
        root /opt/vmware/iotc;
        rewrite ^/api/(.*)$ /$1 break;
        add_header Content-Disposition "attachment";
    }

    location /api/container-mgmt/ {
        root /opt/vmware/iotc;
        rewrite ^/api/(.*)$ /$1 break;
        add_header Content-Disposition "attachment";
    }

    # Notification uservice apis
    location ^~/api/notification-destinations {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$notifications:60060;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/notification-definitions {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$notifications:60060;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/notification-instances {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$notifications:60060;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/system-notification-instances {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$notifications:60060;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/notification-templates {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$notifications:60060;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/notifications {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$notifications:60060;
    }


    # IAM uservice apis
    location ^~/api/organizations {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$iam:60052;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/users {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$iam:60052;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/roles {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$iam:60052;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/groups {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$iam:60052;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/tokens {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$iam:60052;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/permissions {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$iam:60052;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/auth {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$iam:60052;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/certificates {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$iam:60052;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/iam {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$iam:60052;
    }

    location ^~/api/filter-results {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$aggregator:60059;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/filter-keys {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$aggregator:60059;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/filter-definitions {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$aggregator:60059;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/aggregator {
        rewrite ^/api/(.*)$ /api/health break;
        proxy_pass http://$aggregator:60059;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/communicator {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$communicator:60051;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location /iotc.cs.CommunicatorAgentService/ {
        grpc_pass grpc://$communicator:50051;
        grpc_set_header X-Request-ID  $request_id;
    }

    location /com.vmware.iotc.service.grpc.cs.CommunicatorService/ {
        grpc_pass grpc://$communicator:50051;
        grpc_set_header X-Request-ID  $request_id;
    }

    # Console uservice APIs

    # Audit Service APIs
    location ^~/api/audit-logs/export {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/audit-logs {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/audit-types {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/entity-types {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/entities/lookup {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Login Details service APIs
    location ^~/api/me {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Meter Details service APIs
    location ^~/api/meter {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Membership service APIs
    location ^~/api/console-groups {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/console-roles {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    #Task Query APIs
    location ^~/api/tasks {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Api Version service APIs
    location ^~/api/versions {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/console {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Dashboard service APIs
    location ^~/api/dashboards {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }
    location ^~/api/dashboards/widgets {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Console config API
    location ^~/api/config {
        proxy_pass http://$console:60062;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Alert uservice apis
    location ^~/api/alert-definitions {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$alert:60058;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/alerts {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$alert:60058;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/alert {
        rewrite ^/api/(.*)$ /api/health break;
        proxy_pass http://$alert:60058;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Metric APIs
    location ^~/api/metrics {

        if ($request_method = GET) {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$metricquery:60057;
        }

        if ($request_method = POST) {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$metricingest:60056;
        }
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/metricquery {
        rewrite ^/api/(.*)$ /api/health break;
        proxy_pass http://$metricquery:60057;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/metricingest {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$metricingest:60056;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # Campaign Service APIs
    location ^~/api/campaigns {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$lcm:60054;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/campaign-state {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$lcm:60054;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/lcm {
        rewrite ^/api/(.*)$ /api/health break;
        proxy_pass http://$lcm:60054;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/lcm {
        rewrite ^/lcm(.*)$ / break;
        proxy_pass http://$lcm:60054;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/repository {
        rewrite ^/repository/(.*)$ /repository/$1 break;
        proxy_pass http://$lcm:60054;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server

        # Disable request buffering and allow large file uploads
        proxy_request_buffering off;
        client_max_body_size 1024m;
    }

    # Device Management uservice apis
    location ^~/api/device-templates {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicemgmt:60055;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/device-credentials {
        if ($request_method = POST) {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicemgmt:60055;
        }

        if ($request_method = GET) {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicemgmt:60055;
        }
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/device-tokens {
        if ($request_method = GET) {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicemgmt:60055;
        }
        proxy_set_header X-Request-ID $request_id; # Pass request id to server

    }

    location ^~/api/devices/files {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicemgmt:60055;

        proxy_set_header X-Request-ID $request_id; # Pass request id to server

        # Disable request buffering and allow large file uploads
        proxy_request_buffering off;
        client_max_body_size 15m;
    }

    location ^~/api/devices {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicemgmt:60055;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/health/devicemgmt {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$devicemgmt:60055;
    }

    # device security uservice apis
    location ^~/api/profiles/security/ima-digest/ {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicesec:60068;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server

        # Disable request buffering and allow large file uploads
        proxy_request_buffering off;
        client_max_body_size 32m;
    }
    location ^~/api/profiles/security {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicesec:60068;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    location ^~/api/attestation {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicesec:60068;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server

        # Disable request buffering and allow large file uploads
        proxy_request_buffering off;
        client_max_body_size 32m;
    }

    location ^~/api/health/devicesec {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$devicesec:60068;
    }

    # device discovery uservice apis
    location ^~/api/discovery {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$devicedisc:60069;
        proxy_set_header X-Request-ID $request_id;
    }

    location ^~/api/health/discovery {
            rewrite ^/api/(.*)$ /api/health/ break;
            proxy_pass http://$devicedisc:60069;
    }

    # Repo uservice apis
    location ^~/api/health/repo {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$repo:60065;
    }

    location ^~/api/programs {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$repo:60065;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server

        # Disable request buffering and allow large file uploads
        proxy_request_buffering off;
        client_max_body_size 1024m;
    }

    location ^~/repository/api/programs {
        rewrite ^/repository/(.*)$ /$1 break;
        proxy_pass http://$repo:60065;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server

        # Disable request buffering and allow large file uploads
        proxy_request_buffering off;
        client_max_body_size 1024m;
    }

    location ^~/api/files {
        if ($args ~* "^(path=)(.*)") {
        set $args filename=$2;
        rewrite ^.*$ /api/devices/files break;
        }

        proxy_pass http://$devicemgmt:60055;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server

        # Disable request buffering and allow large file uploads
        proxy_request_buffering off;
        client_max_body_size 1024m;
    }

    # distribution uservice apis
    location ^~/api/health/distribution {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$distribution:60067;
    }

    location ^~/api/distribution-list {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$distribution:60067;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # zcsconnector uservice apis
    location ^~/api/zcsdevices {
        proxy_pass http://$zcsconnector:60064;
    }

    location ^~/api/health/zcsconnector {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$zcsconnector:60064;
    }

    # device agent uservice apis
    location ^~/api/applications {
        rewrite ^/api/(.*)$ /api/$1 break;
        proxy_pass http://$deviceagent:60070;
        proxy_set_header X-Request-ID $request_id;
    }

    location ^~/api/health/deviceagent {
        rewrite ^/api/(.*)$ /api/health/ break;
        proxy_pass http://$deviceagent:60070;
        proxy_set_header X-Request-ID $request_id; # Pass request id to server
    }

    # start (adding grafana.conf)
    # deferring this.
    #location = /insights/login {                                                                                                        
    #  auth_request /auth;
#
    #  proxy_pass http://insights.${rootTenantName}:3000;
    #  proxy_set_header   Host $host;                                                                                                      
    #  auth_request_set $username $upstream_http_username;
    #  proxy_set_header X-WEBAUTH-USER $username;
    #  proxy_set_header Authorization "";                                                                                                  
    #}                                                                                                                                   
#
    #location  /insights {
    #  proxy_pass http://insights.${rootTenantName}:3000;
    #}
#
    #location /auth {
    #  internal;
    #  proxy_pass "http://$iam:60052/api/me/permissions/applications/Insights";
    #  proxy_set_header Accept "application/json;api-version=0.17";
    #  proxy_pass_request_body off;
    #  proxy_set_header Authorization "Bearer ${cookie_AuthToken}";
    #}

# end (end of grafana.conf)    
}